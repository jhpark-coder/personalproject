# 프로덕션 환경 설정
spring.application.name=fitmate

# 데이터베이스 설정 (프로덕션용)
spring.datasource.url=jdbc:mysql://localhost:3306/personalproject?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&useSchema=personalproject
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=fitmate_user
spring.datasource.password=fitmate_password

# JPA 설정
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# JWT 설정
jwt.secret=${JWT_SECRET:fitmate_jwt_secret_key_2024_secure_and_long_enough_for_hmac_sha512_algorithm}
jwt.expiration=${JWT_EXPIRATION:86400000}

# 로깅 설정 (프로덕션 최적화)
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.springframework.security=WARN
logging.level.backend.fitmate=INFO
logging.level.root=WARN
# 로그 파일 설정
logging.file.name=/var/log/fitmate/fitmate.log
logging.logback.rollingpolicy.max-file-size=50MB
logging.logback.rollingpolicy.max-history=30

# 서버 설정
server.port=${SERVER_PORT:8080}
server.servlet.context-path=/

# URL 설정
app.frontend.url=${FRONTEND_URL:https://www.fitmate.com}
app.backend.url=${BACKEND_URL:https://www.fitmate.com}

# 보안 설정
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin123}

# 캐시 설정
spring.cache.type=caffeine
spring.cache.cache-names=users,workouts

# 모니터링 설정
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# ===== DataLoader 설정 (프로덕션에서는 비활성화) =====
# DataLoader 활성화 여부 (프로덕션에서는 비활성화)
data.loader.enabled=false
# 테스트 데이터 생성 여부 (프로덕션에서는 비활성화)
data.loader.test-data.enabled=false
# 초기 데이터만 로드 (운동 데이터만, 테스트 데이터 제외)
data.loader.initial-data-only=true

# ===== 스케줄러 설정 (프로덕션에서는 활성화) =====
# 스케줄러 활성화 여부
scheduler.enabled=true
# 운동 데이터 업데이트 스케줄 (매일 밤 2시)
scheduler.exercise.update.cron=0 0 2 * * ?

# ===== 소셜 로그인 설정 (프로덕션 환경) =====

# Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:https://www.fitmate.com/login/oauth2/code/google}

# Google OAuth2 (Calendar Connect) 별도 registration
spring.security.oauth2.client.registration.google-connect.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google-connect.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google-connect.scope=https://www.googleapis.com/auth/calendar.events.readonly
spring.security.oauth2.client.registration.google-connect.redirect-uri=${GOOGLE_CONNECT_REDIRECT_URI:https://www.fitmate.com/login/oauth2/code/google-connect}
spring.security.oauth2.client.registration.google-connect.provider=google

# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.client-authentication-method=post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI:https://www.fitmate.com/auth/kakao/callback}
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# Kakao Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.client-authentication-method=post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI:https://www.fitmate.com/auth/naver/callback}
spring.security.oauth2.client.registration.naver.client-name=Naver

# Naver Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=id