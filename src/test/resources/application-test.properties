# 테스트 환경 설정
spring.application.name=fitmate-test

# H2 인메모리 데이터베이스 사용
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=false

# JPA 설정
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true

# Redis 설정 - 테스트용 임베디드
spring.data.redis.host=localhost
spring.data.redis.port=6370
spring.data.redis.timeout=1000ms

# JWT 설정
jwt.secret=test_secret_key_for_jwt_testing_purpose_minimum_32_chars
jwt.expiration=3600000

# 로깅 설정 (테스트용 최소화)
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.backend.fitmate=INFO

# OAuth2 클라이언트 설정 (테스트용 더미 데이터)
spring.security.oauth2.client.registration.google.client-id=test-google-client-id
spring.security.oauth2.client.registration.google.client-secret=test-google-client-secret
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.kakao.client-id=test-kakao-client-id
spring.security.oauth2.client.registration.kakao.client-secret=test-kakao-client-secret
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

spring.security.oauth2.client.registration.naver.client-id=test-naver-client-id
spring.security.oauth2.client.registration.naver.client-secret=test-naver-client-secret
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google Calendar Connect (테스트용)
spring.security.oauth2.client.registration.google-connect.client-id=test-google-client-id
spring.security.oauth2.client.registration.google-connect.client-secret=test-google-client-secret
spring.security.oauth2.client.registration.google-connect.scope=openid,email,profile
spring.security.oauth2.client.registration.google-connect.redirect-uri=http://localhost:8080/connect/oauth2/code/google-connect
spring.security.oauth2.client.registration.google-connect.provider=google

# DataLoader 설정 (테스트에서는 비활성화)
data.loader.enabled=false
data.loader.test-data.enabled=false
data.loader.initial-data-only=true
data.loader.force-reset=false

# 스케줄러 설정 (테스트에서는 비활성화)
scheduler.enabled=false

# 소셜 로그인 자동 가입 (테스트용)
ALLOW_SOCIAL_AUTO_SIGNUP=true

# Rate Limiting 비활성화 (테스트용)
rate-limiting.enabled=false

# URL 설정
app.frontend.url=http://localhost:3000
app.backend.url=http://localhost:8080