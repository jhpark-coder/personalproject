name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Setup Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        docker --version
        docker-compose --version

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Build communication server
      run: |
        cd communication-server
        npm ci
        npm run build

    - name: Build Spring Boot application
      run: |
        mvn clean package -DskipTests

    - name: Start services with Docker Compose
      run: |
        docker-compose up -d --build
        docker-compose ps

    - name: Wait for services to be healthy
      run: |
        echo "Waiting for frontend..."
        timeout 60 bash -c 'until curl -f http://localhost:5173 > /dev/null 2>&1; do sleep 5; done'

        echo "Waiting for communication server..."
        timeout 60 bash -c 'until curl -f http://localhost:3000/health > /dev/null 2>&1; do sleep 5; done'

        echo "Waiting for Spring Boot..."
        timeout 120 bash -c 'until curl -f http://localhost:8080/actuator/health > /dev/null 2>&1; do sleep 10; done'

    - name: Run E2E tests
      run: |
        cd frontend
        npm run test:e2e

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          frontend/playwright-report/
          frontend/test-results/
          frontend/test-results.json
          frontend/test-results.xml

    - name: Upload test videos/screenshots
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-artifacts
        path: |
          frontend/test-results/videos/
          frontend/test-results/screenshots/

    - name: Stop services
      if: always()
      run: |
        docker-compose down -v
        docker system prune -f

  performance-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run performance tests
      run: |
        cd frontend
        npm run test:performance

    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: frontend/performance-results.json
